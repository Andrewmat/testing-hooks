{"version":3,"sources":["components/CacheProvider.jsx","utils/devconsole.js","components/Async.jsx","hooks/useCache.js","services/client.js","services/googleService.js","components/Card.jsx","hooks/useDocumentTitle.js","services/swService.js","components/CardIterator.jsx","hooks/useIterator.js","utils/range.js","App.js","hooks/useToggle.js","serviceWorker.js","index.js"],"names":["sendInitError","Error","error","console","CacheContext","createContext","_cache","getCache","size","get","set","remove","clear","CacheProvider","_ref","children","cacheContent","useContext","_useState","useState","_useState2","Object","slicedToArray","cacheState","setCacheState","react_default","a","createElement","Provider","value","objectSpread","namespace","getNamespace","Map","key","delete","warn","_len2","arguments","length","args","Array","_key2","propTypes","PropTypes","func","isRequired","promise","placeholder","element","flux","reducer","state","type","payload","pending","data","undefined","initialState","actions","fetch","fulfilled","rejected","Async","_ref2","deps","_useReducer","useReducer","_useReducer2","_useReducer2$","dispatch","useEffect","then","resp","catch","defaultKeyGenerator","stringArgs","map","arg","String","toString","join","sha256","useCache","callback","_ref$keyGenerator","keyGenerator","limit","cache","cachedFunction","_cachedFunction","apply","this","asyncToGenerator","regenerator_default","mark","_callee","_len","_key","finalKey","isBelowLimit","_args","wrap","_context","prev","next","sent","abrupt","stop","useDebugValue","clearCache","fetchJson","_x","_fetchJson","url","response","ok","json","searchUrl","searchParams","URL","search","URLSearchParams","process","cx","searchImage","_x2","_searchImage","_callee2","query","_context2","q","searchType","placeholderImage","src","alt","width","height","renderCardImage","status","result","items","find","resultItem","image","isLinkOk","test","link","isMimeOk","mime","isImage","dimensions","calcWidth","calcHeight","ratio","Math","floor","calcDimensions","className","style","maxHeight","concat","maxWidth","name","dataDescription","eye_color","skin_color","hair_color","mass","Card","props","darkMode","title","document","originalTitle","setOriginalTitle","useDocumentTitle","cachedSearchImage","classnames","card","card--dark-mode","entries","_ref3","description","getPerson","_getPerson","id","CardIterator","_ref$darkMode","_useIterator","list","loop","startIndex","index","setIndex","setLimitedIndex","newIndex","limitedIndex","min","max","genHookProps","i","item","previous","hasNext","hasPrevious","useIterator","start","_start","_length","from","_","range","cachedGetPerson","card-iterator","card-iterator--dark","onClick","disabled","card-iterator__btn","is-dark","filter","includes","_ref4","_ref5","Card_Card","App","_useToggle","initial","Boolean","setValue","useToggle","_useToggle2","setDarkMode","dark-mode-btn","CardIterator_CardIterator","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kSAEMA,EAAgB,WACpB,IACE,MAAM,IAAIC,MAAM,+BAChB,MAAOC,GACPC,QAAQD,MAAMA,KAGLE,EAAeC,wBAAc,CACxCC,OAAQ,GACRC,SAAU,iBAAO,CACfC,KAAM,EACNC,IAAKT,EACLU,IAAKV,EACLW,OAAQX,EACRY,MAAOZ,MAII,SAASa,EAATC,GAAqC,IAAZC,EAAYD,EAAZC,SAChCC,EAAeC,qBAAWb,GADkBc,EAEdC,mBAASH,GAFKI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE3CK,EAF2CH,EAAA,GAE/BI,EAF+BJ,EAAA,GAuClD,OACEK,EAAAC,EAAAC,cAACvB,EAAawB,SAAd,CAAuBC,MAAKR,OAAAS,EAAA,EAAAT,CAAA,GAAOE,EAAP,CAAmBhB,SApCjD,SAAkBwB,GAChB,IAGMC,EAAe,kBAAMT,EAAWjB,OAAOyB,IA4B7C,OA1BKC,MAJHT,EAAWjB,OAAOyB,GAAa,IAAIE,KAuBzB,CACVzB,KAAMwB,IAAexB,KACrBC,IAlBF,SAAayB,GACX,OAAOF,IAAevB,IAAIyB,IAkB1BxB,IAhBF,SAAawB,EAAKL,GAChBG,IAAetB,IAAIwB,EAAKL,GACxBL,EAAcD,IAedZ,OAbF,SAAgBuB,GACdF,IAAeG,OAAOD,GACtBV,EAAcD,IAYdX,MAVF,WACEoB,IAAepB,QACfY,EAAcD,SAebR,6BCpDA,SAASqB,IAAc,QAAAC,EAAAC,UAAAC,OAANC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GAa9B,IClBMC,EAAY,CAChB5B,SAAU6B,IAAUC,KAAKC,WACzBC,QAASH,IAAUC,KAAKC,WACxBE,YAAaJ,IAAUK,QAAQH,YAG3BI,EAAO,CACXC,QAAS,SAACC,EAADtC,GAA8B,IAApBuC,EAAoBvC,EAApBuC,KAAMC,EAAcxC,EAAdwC,QACvB,OAAQD,GACN,IAAK,QACH,OAAOhC,OAAAS,EAAA,EAAAT,CAAA,GACF+B,EADL,CAEEG,SAAS,IAEb,IAAK,YACH,OAAOlC,OAAAS,EAAA,EAAAT,CAAA,GACF+B,EADL,CAEEI,KAAMF,EACNpD,WAAOuD,EACPF,SAAS,IAEb,IAAK,WACH,OAAOlC,OAAAS,EAAA,EAAAT,CAAA,GACF+B,EADL,CAEElD,MAAOoD,EACPC,SAAS,IAEb,QACE,OAAOH,IAGbM,aAAc,CACZH,SAAS,EACTC,UAAMC,EACNvD,WAAOuD,GAETE,QAAS,CACPC,MAAO,iBAAO,CAAEP,KAAM,UACtBQ,UAAW,SAAAL,GAAI,MAAK,CAAEH,KAAM,YAAaC,QAASE,IAClDM,SAAU,SAAA5D,GAAK,MAAK,CAAEmD,KAAM,WAAYC,QAASpD,MAItC,SAAS6D,EAATC,GAAyD,IAAxCjD,EAAwCiD,EAAxCjD,SAAUgC,EAA8BiB,EAA9BjB,QAASkB,EAAqBD,EAArBC,KAAMjB,EAAegB,EAAfhB,YAAekB,EACzBC,qBAC3CjB,EAAKC,QACLD,EAAKQ,cAH+DU,EAAA/C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAAAG,EAAAD,EAAA,GAC7Db,EAD6Dc,EAC7Dd,QAASC,EADoDa,EACpDb,KAAMtD,EAD8CmE,EAC9CnE,MAASoE,EADqCF,EAAA,GAkBtE,OAZAG,oBAAU,WACI,MAARN,GACF7B,EAAI,mKAINkC,EAASpB,EAAKS,QAAQC,SACtBb,IACGyB,KAAK,SAAAC,GAAI,OAAIH,EAASpB,EAAKS,QAAQE,UAAUY,MAC7CC,MAAM,SAAAxE,GAAK,OAAIoE,EAASpB,EAAKS,QAAQG,SAAS5D,OAChD+D,GAAQ,IAEPV,EACKP,EAGLQ,GAAQtD,EACHa,EAASyC,EAAMtD,GAGjB,KAGT6D,EAAMpB,UAAYA,qCCxElB,SAASgC,EAAoBnC,GAC3B,IAAMoC,GAAcpC,GAAQ,IACzBqC,IAAI,SAAAC,GACH,OAAW,MAAPA,EACKC,OAAOD,GAAKE,WAEF,kBAARF,EACFA,EAELA,aAAezD,QAAkC,oBAAjByD,EAAIE,SAC/BF,EAAIE,WAEND,OAAOD,GAAKE,aAEpBC,KAAK,KAER,OAAOC,iBAAON,GAYD,SAASO,EACtBC,GAGA,IAFArD,EAEAO,UAAAC,OAAA,QAAAkB,IAAAnB,UAAA,GAAAA,UAAA,GAFY,SAEZxB,EAAAwB,UAAAC,OAAA,QAAAkB,IAAAnB,UAAA,GAAAA,UAAA,GADqD,GACrD+C,EAAAvE,EADEwE,oBACF,IAAAD,EADiBV,EACjBU,EADsCnD,EACtCpB,EADsCoB,IAAKqD,EAC3CzE,EAD2CyE,MAGrCC,GAAQjF,EADOU,qBAAWb,GAAxBG,UACewB,GAFvB,SAKe0D,IALf,OAAAC,EAAAC,MAAAC,KAAAtD,WAAA,SAAAoD,IAAA,OAAAA,EAAArE,OAAAwE,EAAA,EAAAxE,CAAAyE,EAAApE,EAAAqE,KAKA,SAAAC,IAAA,IAAAC,EAAAzD,EAAA0D,EAAAC,EAAAtE,EAAAuE,EAAAC,EAAA/D,UAAA,OAAAwD,EAAApE,EAAA4E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAAAR,EAAAI,EAAA9D,OAAiCC,EAAjC,IAAAC,MAAAwD,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAiC1D,EAAjC0D,GAAAG,EAAAH,GAAA,GACQC,EAAWjE,GAAOoD,EAAa9C,QAEvBiB,KADV5B,EAAQ2D,EAAM/E,IAAI0F,IAFxB,CAAAI,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAIkBrB,EAAQO,WAAR,EAAYnD,GAJ9B,OAIIX,EAJJ0E,EAAAG,KAMUN,OAAyB3C,IAAV8B,GAAuBC,EAAMhF,KAAO+E,EAC5C,MAAT1D,GAAiBuE,GACnBZ,EAAM9E,IAAIyF,EAAUtE,GAR1B,cAAA0E,EAAAI,OAAA,SAWS9E,GAXT,yBAAA0E,EAAAK,SAAAZ,EAAAJ,UALAD,MAAAC,KAAAtD,WAuBA,OApBAuE,wBAAcrB,EAAMhF,MAgBpBiF,EAAeqB,WAAa,WAC1BtB,EAAM5E,SAGD6E,EC3DF,SAAesB,EAAtBC,GAAA,OAAAC,EAAAtB,MAAAC,KAAAtD,sDAAO,SAAA0D,EAAyBkB,GAAzB,IAAAC,EAAA,OAAArB,EAAApE,EAAA4E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACkB7C,MAAMsD,GADxB,WACCC,EADDZ,EAAAG,MAESU,GAFT,CAAAb,EAAAE,KAAA,cAGGU,EAHH,cAAAZ,EAAAI,OAAA,SAKEQ,EAASE,QALX,wBAAAd,EAAAK,SAAAZ,EAAAJ,gCCEP,IAAM0B,EAAY,WAAuB,IAAtBC,EAAsBjF,UAAAC,OAAA,QAAAkB,IAAAnB,UAAA,GAAAA,UAAA,GAAP,GAC1B4E,EAAM,IAAIM,IAAI,8CAMpB,OALAN,EAAIO,OAAS,IAAIC,gBAAJrG,OAAAS,EAAA,EAAAT,CAAA,CACXa,IAAKyF,0CACLC,GAAID,qCACDJ,IAEEL,GAOF,SAAeW,EAAtBC,GAAA,OAAAC,EAAApC,MAAAC,KAAAtD,sDAAO,SAAA0F,EAA2BC,GAA3B,OAAAnC,EAAApE,EAAA4E,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAvB,OAAA,SACEI,EACLO,EAAU,CACRa,EAAGF,EACHG,WAAY,YAJX,wBAAAF,EAAAtB,SAAAoB,EAAApC,0CCRDyC,EACJ5G,EAAAC,EAAAC,cAAA,OACE2G,IAAI,sCACJC,IAAI,cACJC,MAAO,IACPC,OAAQ,MAUZ,IAuBMC,EAAkB,SAAAlF,GAAI,OAAI,SAAC2D,EAAUjH,GACzC,GAAIA,EACF,OAAqB,MAAjBA,EAAMyI,OAENlH,EAAAC,EAAAC,cAAA,sFAMKF,EAAAC,EAAAC,cAAA,mDAGX,IAAMiH,EAASzB,EAAS0B,MAAMC,KAAK,SAAAC,GAAU,OA1C/C,SAAiBC,GACf,IAAMC,EAAW,sBAAsBC,KAAKF,EAAMG,MAC5CC,EAAW,WAAWF,KAAKF,EAAMK,MACvC,OAAOJ,GAAYG,EAuC8BE,CAAQP,KACnDQ,EArCe,SAAAzI,GAAuB,IAApB0H,EAAoB1H,EAApB0H,MAAOC,EAAa3H,EAAb2H,OAI/B,GAAID,GAHc,KAGQC,GAFP,IAGjB,MAAO,CAAED,QAAOC,UAElB,IAAIe,EAAYhB,EACZiB,EAAahB,EACXiB,EAAQlB,EAAQC,EAWtB,OATIe,EAVc,MAYhBC,GADAD,EAXgB,KAYSE,GAEvBD,EAbe,MAejBD,GADAC,EAdiB,KAeQC,GAGpB,CAAElB,MAAOmB,KAAKC,MAAMJ,GAAYf,OAAQkB,KAAKC,MAAMH,IAiBvCI,CAAejB,EAAOI,OACzC,OACEvH,EAAAC,EAAAC,cAAA,OACEmI,UAAU,sBACVC,MAAO,CACLC,UAAS,GAAAC,OAAKV,EAAWd,OAAhB,MACTyB,SAAQ,GAAAD,OAAKV,EAAWf,MAAhB,QAGV/G,EAAAC,EAAAC,cAAA,OACE2G,IAAKM,EAAOO,KACZZ,IAAK/E,EAAK2G,KACV1B,OAAQc,EAAWd,OACnBD,MAAOe,EAAWf,WAMpB4B,EAAkB,CACtBC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZ9B,OAAQ,SACR+B,KAAM,QAGO,SAASC,EAAKC,GAAO,IAC1BlH,EAAmBkH,EAAnBlH,KAAMmH,EAAaD,EAAbC,UCtFD,SAA0BC,GAAO,IAAA1J,EACJC,mBAAS0J,SAASD,OADdxJ,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvC4J,EADuC1J,EAAA,GACxB2J,EADwB3J,EAAA,GAU9C,GARAyF,wBAAc+D,GACdrG,oBAAU,WAGR,OAFAwG,EAAiBF,SAASD,OAC1BC,SAASD,MAAQA,EACV,WACLC,SAASD,MAAQE,IAElB,CAACF,KACCC,SACH,MAAM,IAAI5K,MAAJ,+DD4ER+K,CAAgB,GAAAf,OAAIzG,EAAK2G,KAAT,YAChB,IAAMc,EAAoB9F,EAAS0C,EAAa,OAEhD,OACEpG,EAAAC,EAAAC,cAAA,OACEmI,UAAWoB,IAAW,CACpBC,MAAM,EACNC,kBAAmBT,KAGrBlJ,EAAAC,EAAAC,cAAA,QAAMmI,UAAU,eAAetG,EAAK2G,MACnC9I,OAAOgK,QAAQjB,GAAiBvF,IAAI,SAAAb,GAAA,IAAAsH,EAAAjK,OAAAC,EAAA,EAAAD,CAAA2C,EAAA,GAAE9B,EAAFoJ,EAAA,GAAOC,EAAPD,EAAA,UACnC7J,EAAAC,EAAAC,cAAA,OAAKmI,UAAU,aAAa5H,IAAKA,GAC/BT,EAAAC,EAAAC,cAAA,WAAM4J,EAAN,KACA9J,EAAAC,EAAAC,cAAA,WAAM6B,EAAKtB,OAGfT,EAAAC,EAAAC,cAACoC,EAAD,CACEhB,QAAS,kBAAMkI,EAAkBzH,EAAK2G,OACtCnH,YAAaqF,GAGZK,EAAgBlF,KE7GlB,SAAegI,EAAtBxE,GAAA,OAAAyE,EAAA9F,MAAAC,KAAAtD,sDAAO,SAAA0D,EAAyB0F,GAAzB,OAAA5F,EAAApE,EAAA4E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAI,OAAA,SACEI,EAAS,+BAAAkD,OAAgCyB,EAAhC,OADX,wBAAAnF,EAAAK,SAAAZ,EAAAJ,sCCQQ,SAAS+F,EAAT7K,GAA4C,IAAA8K,EAAA9K,EAApB6J,gBAAoB,IAAAiB,KAAAC,ECR5C,SAAqBC,GAAoC,IAA9BC,EAA8BzJ,UAAAC,OAAA,QAAAkB,IAAAnB,UAAA,IAAAA,UAAA,GAAhB0J,EAAgB1J,UAAAC,OAAA,QAAAkB,IAAAnB,UAAA,GAAAA,UAAA,GAAH,EAAGpB,EAC5CC,mBAAS6K,GADmC5K,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC/D+K,EAD+D7K,EAAA,GACxD8K,EADwD9K,EAAA,GAItE,SAAS+K,EAAgBC,GACvB,IAAIC,EAAeD,EAanB,OAZIA,EAAW,GAAKA,GAAYN,EAAKvJ,UAKjC8J,EAFEN,EAEaK,GAAYN,EAAKvJ,OAAS,EAAIuJ,EAAKvJ,OAAS,EAG5CoH,KAAK2C,IAAI3C,KAAK4C,IAAIH,EAAU,GAAIN,EAAKvJ,OAAS,IAGjE2J,EAASG,GACFA,EAoBT,OApCAxF,wBAAcoF,GAmBd,SAASO,EAAaC,GACpB,MAAO,CACLR,MAAOQ,EACPC,KAAMZ,EAAKW,GACXhG,KAAM,WAEJ,OAAO+F,EADWL,EAAgBM,EAAI,KAGxCE,SAAU,WAER,OAAOH,EADeL,EAAgBM,EAAI,KAG5CG,QAASb,GAAQU,EAAIX,EAAKvJ,OAAS,EACnCsK,YAAad,GAAc,IAANU,GAIlBD,CAAaP,GD7BmCa,CEJ1C,SAAeC,EAAOxK,GACnC,IAAIyK,EAASD,EACTE,EAAU1K,EAKd,OAJKA,IACHyK,EAAS,EACTC,EAAUF,GAELtK,MAAMyK,KAAK,CAAE3K,OAAQ0K,IAAWpI,IAAI,SAACsI,EAAGV,GAAJ,OAAUA,EAAIO,IFFvDI,CAAM,EAAG,IACT,GAFMV,EADiDb,EACjDa,KAAMjG,EAD2CoF,EAC3CpF,KAAMmG,EADqCf,EACrCe,QAASD,EAD4Bd,EAC5Bc,SAAUE,EADkBhB,EAClBgB,YAIjCQ,EAAkBlI,EAASqG,EAAW,YAE5C,OACE/J,EAAAC,EAAAC,cAAA,OACEmI,UAAWoB,IAAW,CACpBoC,iBAAiB,EACjBC,sBAAuB5C,KAGzBlJ,EAAAC,EAAAC,cAAA,OAAKmI,UAAU,8BACbrI,EAAAC,EAAAC,cAAA,UACE6L,QAASb,EACTc,UAAWZ,EACX/C,UAAWoB,IAAW,CACpBwC,sBAAsB,EACtBC,WAAYhD,KALhB,aAWFlJ,EAAAC,EAAAC,cAAA,OAAKmI,UAAU,+BACbrI,EAAAC,EAAAC,cAACoC,EAAD,CACEhB,QAAS,kBAAMsK,EAAgBX,IAC/BzI,KAAM,CAACyI,GACP1J,YAAavB,EAAAC,EAAAC,cAAA,OAAKmI,UAAU,uBAAf,eAEZ,SAACtG,EAAMtD,GAAP,OACCuB,EAAAC,EAAAC,cAAA,OAAKmI,UAAU,uBACZ5J,EACCuB,EAAAC,EAAAC,cAAA,OAAKmI,UAAU,8BAAf,0BAEErI,EAAAC,EAAAC,cAAA,WACGN,OAAOgK,QAAQnL,GACb0N,OAAO,SAAA5J,GAAA,IAAAsH,EAAAjK,OAAAC,EAAA,EAAAD,CAAA2C,EAAA,GAAKnC,GAALyJ,EAAA,GAAAA,EAAA,UACN,CAAC,SAAU,SAAU,WAAWuC,gBAAgBhM,KAEjDgD,IAAI,SAAAiJ,GAAA,IAAAC,EAAA1M,OAAAC,EAAA,EAAAD,CAAAyM,EAAA,GAAE5L,EAAF6L,EAAA,GAAOlM,EAAPkM,EAAA,UACHtM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,cAASO,GADX,KAC2BL,OAMnCJ,EAAAC,EAAAC,cAACqM,EAAD,CAAMxK,KAAMA,EAAMmH,SAAUA,QAMtClJ,EAAAC,EAAAC,cAAA,OAAKmI,UAAU,8BACbrI,EAAAC,EAAAC,cAAA,UACE6L,QAAS/G,EACTgH,UAAWb,EACX9C,UAAWoB,IAAW,CACpBwC,sBAAsB,EACtBC,WAAYhD,KALhB,oBGvCOsD,EArBH,WAAM,IAAAC,ECLH,WAAoC,IAAjBC,EAAiB7L,UAAAC,OAAA,QAAAkB,IAAAnB,UAAA,IAAAA,UAAA,GAAApB,EACvBC,mBAASiN,QAAQD,IADM/M,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAC1CW,EAD0CT,EAAA,GACnCiN,EADmCjN,EAAA,GAGjD,OADAyF,wBAAchF,GACP,CAACA,EAAO,kBAAMwM,GAAUxM,KDGCyM,GADhBC,EAAAlN,OAAAC,EAAA,EAAAD,CAAA6M,EAAA,GACTvD,EADS4D,EAAA,GACCC,EADDD,EAAA,GAEhB,OACE9M,EAAAC,EAAAC,cAAA,OAAKmI,UAAU,YACbrI,EAAAC,EAAAC,cAAA,UACEmI,UAAWoB,IAAW,CACpBuD,iBAAiB,EACjBd,UAAWhD,IAEbtH,KAAK,SACLmK,QAASgB,GAER7D,EAAW,qBAAuB,sBAErClJ,EAAAC,EAAAC,cAACd,EAAD,KACEY,EAAAC,EAAAC,cAAC+M,EAAD,CAAc/D,SAAUA,OEVZyD,QACW,cAA7BO,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvN,EAAAC,EAAAC,cAACsN,EAAD,MAASpE,SAASqE,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7K,KAAK,SAAA8K,GACjCA,EAAaC","file":"static/js/main.7d1d03d5.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from 'react'\r\n\r\nconst sendInitError = () => {\r\n  try {\r\n    throw new Error('Uninitialized cache context')\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\nexport const CacheContext = createContext({\r\n  _cache: {},\r\n  getCache: () => ({\r\n    size: 0,\r\n    get: sendInitError,\r\n    set: sendInitError,\r\n    remove: sendInitError,\r\n    clear: sendInitError,\r\n  }),\r\n})\r\n\r\nexport default function CacheProvider({ children }) {\r\n  const cacheContent = useContext(CacheContext)\r\n  const [cacheState, setCacheState] = useState(cacheContent)\r\n\r\n  function getCache(namespace) {\r\n    const initNamespace = () => {\r\n      cacheState._cache[namespace] = new Map()\r\n    }\r\n    const getNamespace = () => cacheState._cache[namespace]\r\n\r\n    if (!getNamespace()) {\r\n      initNamespace()\r\n    }\r\n    function get(key) {\r\n      return getNamespace().get(key)\r\n    }\r\n    function set(key, value) {\r\n      getNamespace().set(key, value)\r\n      setCacheState(cacheState)\r\n    }\r\n    function remove(key) {\r\n      getNamespace().delete(key)\r\n      setCacheState(cacheState)\r\n    }\r\n    function clear() {\r\n      getNamespace().clear()\r\n      setCacheState(cacheState)\r\n    }\r\n\r\n    const val = {\r\n      size: getNamespace().size,\r\n      get,\r\n      set,\r\n      remove,\r\n      clear,\r\n    }\r\n    return val\r\n  }\r\n\r\n  return (\r\n    <CacheContext.Provider value={{ ...cacheState, getCache }}>\r\n      {children}\r\n    </CacheContext.Provider>\r\n  )\r\n}\r\n","function _console(func, args) {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    console[func](...args)\r\n  }\r\n}\r\n\r\nexport function log(...args) {\r\n  _console('log', args)\r\n}\r\nexport function warn(...args) {\r\n  _console('warn', args)\r\n}\r\nexport function error(...args) {\r\n  _console('error', args)\r\n}\r\nexport function count(...args) {\r\n  _console('count', args)\r\n}\r\nexport function table(...args) {\r\n  _console('table', args)\r\n}\r\n\r\nconst devconsole = {\r\n  log,\r\n  warn,\r\n  error,\r\n  count,\r\n  table,\r\n}\r\n\r\nexport default devconsole\r\n","import { useEffect, useReducer } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { warn } from '../utils/devconsole'\r\n\r\nconst propTypes = {\r\n  children: PropTypes.func.isRequired,\r\n  promise: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.element.isRequired,\r\n}\r\n\r\nconst flux = {\r\n  reducer: (state, { type, payload }) => {\r\n    switch (type) {\r\n      case 'fetch':\r\n        return {\r\n          ...state,\r\n          pending: true,\r\n        }\r\n      case 'fulfilled':\r\n        return {\r\n          ...state,\r\n          data: payload,\r\n          error: undefined,\r\n          pending: false,\r\n        }\r\n      case 'rejected':\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          pending: false,\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  },\r\n  initialState: {\r\n    pending: false,\r\n    data: undefined,\r\n    error: undefined,\r\n  },\r\n  actions: {\r\n    fetch: () => ({ type: 'fetch' }),\r\n    fulfilled: data => ({ type: 'fulfilled', payload: data }),\r\n    rejected: error => ({ type: 'rejected', payload: error }),\r\n  },\r\n}\r\n\r\nexport default function Async({ children, promise, deps, placeholder }) {\r\n  const [{ pending, data, error }, dispatch] = useReducer(\r\n    flux.reducer,\r\n    flux.initialState,\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (deps == null) {\r\n      warn(\r\n        `[Async] No deps array was given, so <Async> will only call async function when is mounted\\n\\tTo fix this, you should set the deps prop to the appropriate value`,\r\n      )\r\n    }\r\n    dispatch(flux.actions.fetch())\r\n    promise()\r\n      .then(resp => dispatch(flux.actions.fulfilled(resp)))\r\n      .catch(error => dispatch(flux.actions.rejected(error)))\r\n  }, deps || [])\r\n\r\n  if (pending) {\r\n    return placeholder\r\n  }\r\n\r\n  if (data || error) {\r\n    return children(data, error)\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nAsync.propTypes = propTypes\r\n","import { useContext, useDebugValue } from 'react'\r\nimport { sha256 } from 'js-sha256'\r\nimport { CacheContext } from '../components/CacheProvider'\r\n\r\nfunction defaultKeyGenerator(args) {\r\n  const stringArgs = (args || [])\r\n    .map(arg => {\r\n      if (arg == null) {\r\n        return String(arg).toString()\r\n      }\r\n      if (typeof arg === 'string') {\r\n        return arg\r\n      }\r\n      if (arg instanceof Object && typeof arg.toString === 'function') {\r\n        return arg.toString()\r\n      }\r\n      return String(arg).toString()\r\n    })\r\n    .join(',')\r\n\r\n  return sha256(stringArgs)\r\n}\r\n\r\n/**\r\n *\r\n * Caches result of callback function into an internal state\r\n * @param {function} [callback] async function that caches results according to key\r\n * @param {string} [namespace] caching namespace to use. Very recommended to avoid cache collision when cache is used in different contexts\r\n * @param {string} [key] optional key of cache entry\r\n * @param {function} [keyGenerator] optional function that generates key. It receives an array of parameters and must return an string\r\n * @returns function that executes callback and caches results. The function has an extra property, clearCache, that removes all cache entries\r\n */\r\nexport default function useCache(\r\n  callback,\r\n  namespace = '__root',\r\n  { keyGenerator = defaultKeyGenerator, key, limit } = {},\r\n) {\r\n  const { getCache } = useContext(CacheContext)\r\n  const cache = getCache(namespace)\r\n  useDebugValue(cache.size)\r\n\r\n  async function cachedFunction(...args) {\r\n    const finalKey = key || keyGenerator(args)\r\n    let value = cache.get(finalKey)\r\n    if (value === undefined) {\r\n      value = await callback(...args)\r\n\r\n      const isBelowLimit = limit === undefined || cache.size < limit\r\n      if (value != null && isBelowLimit) {\r\n        cache.set(finalKey, value)\r\n      }\r\n    }\r\n    return value\r\n  }\r\n\r\n  cachedFunction.clearCache = () => {\r\n    cache.clear()\r\n  }\r\n\r\n  return cachedFunction\r\n}\r\n","export async function fetchJson(url) {\r\n  const response = await fetch(url)\r\n  if (!response.ok) {\r\n    throw response\r\n  }\r\n  return response.json()\r\n}\r\n","import { fetchJson } from './client'\r\n\r\nconst searchUrl = (searchParams = {}) => {\r\n  const url = new URL('https://www.googleapis.com/customsearch/v1')\r\n  url.search = new URLSearchParams({\r\n    key: process.env.APP_GOOGLESEARCH_API_KEY,\r\n    cx: process.env.APP_GOOGLESEARCH_CONTROL_ID,\r\n    ...searchParams,\r\n  })\r\n  return url\r\n}\r\n\r\nexport async function search(query) {\r\n  return fetchJson(searchUrl({ q: query }))\r\n}\r\n\r\nexport async function searchImage(query) {\r\n  return fetchJson(\r\n    searchUrl({\r\n      q: query,\r\n      searchType: 'image',\r\n    }),\r\n  )\r\n}\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport Async from './Async'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\nimport useCache from '../hooks/useCache'\r\nimport { searchImage } from '../services/googleService'\r\nimport './Card.scss'\r\n\r\nconst placeholderImage = (\r\n  <img\r\n    src='https://picsum.photos/300/200/?blur'\r\n    alt='placeholder'\r\n    width={300}\r\n    height={200}\r\n  />\r\n)\r\n\r\nfunction isImage(image) {\r\n  const isLinkOk = /\\.(jpe?g|png|webp)$/.test(image.link)\r\n  const isMimeOk = /^image\\//.test(image.mime)\r\n  return isLinkOk && isMimeOk\r\n}\r\n\r\nconst calcDimensions = ({ width, height }) => {\r\n  const MAX_WIDTH = 500\r\n  const MAX_HEIGHT = 250\r\n\r\n  if (width <= MAX_WIDTH && height <= MAX_HEIGHT) {\r\n    return { width, height }\r\n  }\r\n  let calcWidth = width\r\n  let calcHeight = height\r\n  const ratio = width / height\r\n\r\n  if (calcWidth > MAX_WIDTH) {\r\n    calcWidth = MAX_WIDTH\r\n    calcHeight = calcWidth / ratio\r\n  }\r\n  if (calcHeight > MAX_HEIGHT) {\r\n    calcHeight = MAX_HEIGHT\r\n    calcWidth = calcHeight * ratio\r\n  }\r\n\r\n  return { width: Math.floor(calcWidth), height: Math.floor(calcHeight) }\r\n}\r\n\r\nconst renderCardImage = data => (response, error) => {\r\n  if (error) {\r\n    if (error.status === 403) {\r\n      return (\r\n        <div>\r\n          Oops. It looks like we ran out of image lookups... Look again\r\n          tomorrow!\r\n        </div>\r\n      )\r\n    } else {\r\n      return <div>I find the lack of images disturbing</div>\r\n    }\r\n  }\r\n  const result = response.items.find(resultItem => isImage(resultItem))\r\n  const dimensions = calcDimensions(result.image)\r\n  return (\r\n    <div\r\n      className='card__image-wrapper'\r\n      style={{\r\n        maxHeight: `${dimensions.height}px`,\r\n        maxWidth: `${dimensions.width}px`,\r\n      }}\r\n    >\r\n      <img\r\n        src={result.link}\r\n        alt={data.name}\r\n        height={dimensions.height}\r\n        width={dimensions.width}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst dataDescription = {\r\n  eye_color: 'Eye color',\r\n  skin_color: 'Skin color',\r\n  hair_color: 'Hair color',\r\n  height: 'Height',\r\n  mass: 'Mass',\r\n}\r\n\r\nexport default function Card(props) {\r\n  const { data, darkMode } = props\r\n  useDocumentTitle(`${data.name} - SWDB`)\r\n  const cachedSearchImage = useCache(searchImage, 'img')\r\n\r\n  return (\r\n    <div\r\n      className={classnames({\r\n        card: true,\r\n        'card--dark-mode': darkMode,\r\n      })}\r\n    >\r\n      <span className='card__title'>{data.name}</span>\r\n      {Object.entries(dataDescription).map(([key, description]) => (\r\n        <div className='card__data' key={key}>\r\n          <div>{description}:</div>\r\n          <div>{data[key]}</div>\r\n        </div>\r\n      ))}\r\n      <Async\r\n        promise={() => cachedSearchImage(data.name)}\r\n        placeholder={placeholderImage}\r\n        // deps={[data.name]}\r\n      >\r\n        {renderCardImage(data)}\r\n      </Async>\r\n    </div>\r\n  )\r\n}\r\n","import { useDebugValue, useEffect, useState } from 'react'\r\n\r\nexport default function useDocumentTitle(title) {\r\n  const [originalTitle, setOriginalTitle] = useState(document.title)\r\n  useDebugValue(title)\r\n  useEffect(() => {\r\n    setOriginalTitle(document.title)\r\n    document.title = title\r\n    return () => {\r\n      document.title = originalTitle\r\n    }\r\n  }, [title])\r\n  if (!document) {\r\n    throw new Error(\r\n      `useDocumentTitle can't be used in contexts without document`,\r\n    )\r\n  }\r\n}\r\n","import { fetchJson } from './client'\r\n\r\nexport async function getPerson(id) {\r\n  return fetchJson(`https://swapi.co/api/people/${id}/`)\r\n}\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\nimport Card from './Card'\r\nimport Async from './Async'\r\nimport useCache from '../hooks/useCache'\r\nimport useIterator from '../hooks/useIterator'\r\nimport { getPerson } from '../services/swService'\r\nimport range from '../utils/range'\r\nimport './CardIterator.scss'\r\n\r\nexport default function CardIterator({ darkMode = false }) {\r\n  const { item, next, hasNext, previous, hasPrevious } = useIterator(\r\n    range(1, 6),\r\n    true,\r\n  )\r\n  const cachedGetPerson = useCache(getPerson, 'swPerson')\r\n\r\n  return (\r\n    <div\r\n      className={classnames({\r\n        'card-iterator': true,\r\n        'card-iterator--dark': darkMode,\r\n      })}\r\n    >\r\n      <div className='card-iterator__btn-wrapper'>\r\n        <button\r\n          onClick={previous}\r\n          disabled={!hasPrevious}\r\n          className={classnames({\r\n            'card-iterator__btn': true,\r\n            'is-dark': !darkMode,\r\n          })}\r\n        >\r\n          Previous\r\n        </button>\r\n      </div>\r\n      <div className='card-iterator__item-wrapper'>\r\n        <Async\r\n          promise={() => cachedGetPerson(item)}\r\n          deps={[item]}\r\n          placeholder={<div className='card-iterator__item'>Loading...</div>}\r\n        >\r\n          {(data, error) => (\r\n            <div className='card-iterator__item'>\r\n              {error ? (\r\n                <div className='card-iterator__item--error'>\r\n                  Something went wrong :(\r\n                  <div>\r\n                    {Object.entries(error)\r\n                      .filter(([_, value]) =>\r\n                        ['string', 'number', 'boolean'].includes(typeof value),\r\n                      )\r\n                      .map(([key, value]) => (\r\n                        <div>\r\n                          <strong>{key}</strong>: {value}\r\n                        </div>\r\n                      ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <Card data={data} darkMode={darkMode} />\r\n              )}\r\n            </div>\r\n          )}\r\n        </Async>\r\n      </div>\r\n      <div className='card-iterator__btn-wrapper'>\r\n        <button\r\n          onClick={next}\r\n          disabled={!hasNext}\r\n          className={classnames({\r\n            'card-iterator__btn': true,\r\n            'is-dark': !darkMode,\r\n          })}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useDebugValue } from 'react'\r\n\r\nexport default function useIterator(list, loop = false, startIndex = 0) {\r\n  const [index, setIndex] = useState(startIndex)\r\n  useDebugValue(index)\r\n\r\n  function setLimitedIndex(newIndex) {\r\n    let limitedIndex = newIndex\r\n    if (newIndex < 0 || newIndex >= list.length) {\r\n      // after limit?\r\n\r\n      if (loop) {\r\n        // loop enabled\r\n        limitedIndex = newIndex >= list.length ? 0 : list.length - 1\r\n      } else {\r\n        // loop disabled\r\n        limitedIndex = Math.min(Math.max(newIndex, 0), list.length - 1)\r\n      }\r\n    }\r\n    setIndex(limitedIndex)\r\n    return limitedIndex\r\n  }\r\n\r\n  function genHookProps(i) {\r\n    return {\r\n      index: i,\r\n      item: list[i],\r\n      next: () => {\r\n        const nextIndex = setLimitedIndex(i + 1)\r\n        return genHookProps(nextIndex)\r\n      },\r\n      previous: () => {\r\n        const previousIndex = setLimitedIndex(i - 1)\r\n        return genHookProps(previousIndex)\r\n      },\r\n      hasNext: loop || i < list.length - 1,\r\n      hasPrevious: loop || i !== 0,\r\n    }\r\n  }\r\n\r\n  return genHookProps(index)\r\n}\r\n","/**\r\n * range(start = 0, length)\r\n * Produces an array filled with a range of integer numbers\r\n * @param {*} start first value of range\r\n * @param {*} length length of range\r\n * @returns array of range from start to start + length\r\n */\r\nexport default function range(start, length) {\r\n  let _start = start\r\n  let _length = length\r\n  if (!length) {\r\n    _start = 0\r\n    _length = start\r\n  }\r\n  return Array.from({ length: _length }).map((_, i) => i + _start)\r\n}\r\n","import React from 'react'\nimport classnames from 'classnames'\nimport CacheProvider from './components/CacheProvider'\nimport CardIterator from './components/CardIterator'\nimport useToggle from './hooks/useToggle'\nimport './App.scss'\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useToggle()\n  return (\n    <div className='app-root'>\n      <button\n        className={classnames({\n          'dark-mode-btn': true,\n          'is-dark': darkMode,\n        })}\n        type='button'\n        onClick={setDarkMode}\n      >\n        {darkMode ? 'Return of the Jedi' : 'Join the Dark Side'}\n      </button>\n      <CacheProvider>\n        <CardIterator darkMode={darkMode} />\n      </CacheProvider>\n    </div>\n  )\n}\n\nexport default App\n","import { useState, useDebugValue } from 'react'\r\n\r\nexport default function useToggle(initial = false) {\r\n  const [value, setValue] = useState(Boolean(initial))\r\n  useDebugValue(value)\r\n  return [value, () => setValue(!value)]\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}